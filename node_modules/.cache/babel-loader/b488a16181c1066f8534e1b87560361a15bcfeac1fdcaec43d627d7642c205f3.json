{"ast":null,"code":"var _jsxFileName = \"/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Menu_page.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport data from '../data/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Split1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split1\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cliquez pour d\\xE9couvrir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Split1;\nconst Menu_page_item = ({\n  titre\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_page_item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: titre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Menu_page_item;\nconst Menu_page = () => {\n  _s();\n  const menuRef = useRef(null);\n\n  // Récupérer les sections depuis le JSON\n  const sections = data.fr.sections;\n\n  // Création des refs pour chaque carrousel\n  const carouselRefs = useRef(sections.map(() => /*#__PURE__*/React.createRef()));\n  useEffect(() => {\n    const handleMouseOver = index => {\n      // Mettre opacité à 0.7 pour tous les carrousels sauf celui survolé\n      carouselRefs.current.forEach((ref, i) => {\n        if (ref.current && i !== index) {\n          ref.current.style.opacity = '0.7';\n        }\n      });\n    };\n    const handleMouseOut = () => {\n      // Rétablir l'opacité à 1 pour tous les carrousels\n      carouselRefs.current.forEach(ref => {\n        if (ref.current) {\n          ref.current.style.opacity = '1';\n        }\n      });\n    };\n\n    // Ajouter les événements de survol et de sortie pour chaque carrousel\n    carouselRefs.current.forEach((ref, index) => {\n      if (ref.current) {\n        ref.current.addEventListener('mouseover', () => handleMouseOver(index));\n        ref.current.addEventListener('mouseout', handleMouseOut);\n      }\n    });\n\n    // Nettoyage des événements lors du démontage du composant\n    return () => {\n      carouselRefs.current.forEach((ref, index) => {\n        if (ref.current) {\n          ref.current.removeEventListener('mouseover', () => handleMouseOver(index));\n          ref.current.removeEventListener('mouseout', handleMouseOut);\n        }\n      });\n    };\n  }, [sections]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_page\",\n    ref: menuRef,\n    children: [/*#__PURE__*/_jsxDEV(Split1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), sections.map((section, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carrousel\",\n        ref: carouselRefs.current[index] // Référence assignée\n        ,\n        id: section.titre,\n        children: Array(12).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Menu_page_item, {\n          titre: section.titre\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), index < sections.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"split2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 53\n      }, this)]\n    }, section.titre, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Split1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Menu_page, \"jpd1FLZltpBcApQNfWDnE00WCnI=\");\n_c3 = Menu_page;\nexport default Menu_page;\n\n// import React from 'react';\n// import { useEffect, useRef, useState } from \"react\";\n// import data from '../data/data.json';\n\n// const Split1 = () => {\n//     return (\n//         <div className=\"split1\">\n//             <span></span>\n//             <p>Cliquez pour découvrir</p>\n//             <span></span>\n//         </div>\n//     );\n// };\n\n// const Menu_page_item = ({ titre }) => {\n//     return (\n//         <div className='menu_page_item'>\n//             <span></span>\n//             <p>{titre}</p>\n//         </div>\n//     );\n// };\n\n// const Menu_page = () => {\n//     const menuRef = useRef(null);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [startY, setStartY] = useState(0);\n\n//     // Récupérer les sections depuis le JSON\n//     const sections = data.fr.sections;\n\n//     // Création des refs en utilisant un objet\n//     const carouselRefs = useRef(\n//         Object.fromEntries(sections.map(section => [section.titre, { current: null }]))\n//     );\n//     const velocityRefs = useRef(\n//         Object.fromEntries(sections.map(section => [section.titre, 0]))\n//     );\n\n//     useEffect(() => {\n//         const observer = new IntersectionObserver(\n//             (entries) => {\n//                 entries.forEach(entry => {\n//                     if (entry.isIntersecting) {\n//                         setIsVisible(true);\n//                         setStartY(window.scrollY);\n//                     } else {\n//                         setIsVisible(false);\n//                     }\n//                 });\n//             },\n//             { threshold: 0.1 }\n//         );\n\n//         if (menuRef.current) {\n//             observer.observe(menuRef.current);\n//         }\n\n//         return () => {\n//             if (menuRef.current) {\n//                 observer.unobserve(menuRef.current);\n//             }\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         if (!isVisible) return;\n\n//         let animationFrameId;\n//         let lastScrollY = window.scrollY;\n\n//         const smoothScroll = () => {\n//             const relativeScrollY = window.scrollY - startY;\n//             const maxScroll = 1000;\n//             const boundedScrollY = Math.max(0, Math.min(relativeScrollY, maxScroll));\n\n//             sections.forEach((section, index) => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (!carousel) return;\n\n//                 const offset = -500 + (index * 100);\n//                 velocityRefs.current[section.titre] += \n//                     ((offset + boundedScrollY * 0.2) - parseFloat(carousel.style.transform?.replace('translateX(', '').replace('px)', '') || 0)) * 0.1;\n\n//                 velocityRefs.current[section.titre] *= 0.95;\n//                 carousel.style.transform = `translateX(${velocityRefs.current[section.titre]}px)`;\n//             });\n\n//             const hasMovement = Object.values(velocityRefs.current).some(\n//                 velocity => Math.abs(velocity) > 0.1\n//             );\n\n//             if (hasMovement) {\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n\n//             lastScrollY = window.scrollY;\n//         };\n\n//         const startSmoothScroll = () => {\n//             if (isVisible) {\n//                 cancelAnimationFrame(animationFrameId);\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         window.addEventListener('scroll', startSmoothScroll);\n\n//         const updateOpacity = (targetId) => {\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel && carousel.id !== targetId) {\n//                     carousel.style.opacity = '0.7';\n//                 }\n//             });\n//         };\n\n//         const resetOpacity = () => {\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel) {\n//                     carousel.style.opacity = '1';\n//                 }\n//             });\n//         };\n\n//         sections.forEach(section => {\n//             const carousel = carouselRefs.current[section.titre].current;\n//             if (carousel) {\n//                 carousel.addEventListener('mouseover', () => updateOpacity(section.titre));\n//                 //carousel.addEventListener('mouseout', resetOpacity);\n//             }\n//         });\n\n//         return () => {\n//             window.removeEventListener('scroll', startSmoothScroll);\n//             cancelAnimationFrame(animationFrameId);\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel) {\n//                     carousel.removeEventListener('mouseover', () => updateOpacity(section.titre));\n//                     carousel.removeEventListener('mouseout', resetOpacity);\n//                 }\n//             });\n//         };\n//     }, [isVisible, startY, sections]);\n\n//     return (\n//         <div className=\"menu_page\" ref={menuRef}>\n//             <Split1 />\n//             {sections.map((section, index) => (\n//                 <React.Fragment key={section.titre}>\n//                     <div \n//                         className=\"carrousel\" \n//                         ref={el => carouselRefs.current[section.titre].current = el}\n//                         id={section.titre}\n//                     >\n//                         {Array(12).fill(null).map((_, i) => (\n//                             <Menu_page_item key={i} titre={section.titre} />\n//                         ))}\n//                     </div>\n//                     {index < sections.length - 1 && <span className=\"split2\" />}\n//                 </React.Fragment>\n//             ))}\n//             <Split1 />\n//         </div>\n//     );\n// };\n\n// export default Menu_page;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Split1\");\n$RefreshReg$(_c2, \"Menu_page_item\");\n$RefreshReg$(_c3, \"Menu_page\");","map":{"version":3,"names":["React","useRef","useEffect","data","jsxDEV","_jsxDEV","Split1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Menu_page_item","titre","_c2","Menu_page","_s","menuRef","sections","fr","carouselRefs","map","createRef","handleMouseOver","index","current","forEach","ref","i","style","opacity","handleMouseOut","addEventListener","removeEventListener","section","Fragment","id","Array","fill","_","length","_c3","$RefreshReg$"],"sources":["/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Menu_page.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport data from '../data/data.json';\n\nconst Split1 = () => {\n    return (\n        <div className=\"split1\">\n            <span></span>\n            <p>Cliquez pour découvrir</p>\n            <span></span>\n        </div>\n    );\n};\n\nconst Menu_page_item = ({ titre }) => {\n    return (\n        <div className='menu_page_item'>\n            <span></span>\n            <p>{titre}</p>\n        </div>\n    );\n};\n\nconst Menu_page = () => {\n    const menuRef = useRef(null);\n    \n    // Récupérer les sections depuis le JSON\n    const sections = data.fr.sections;\n    \n    // Création des refs pour chaque carrousel\n    const carouselRefs = useRef(sections.map(() => React.createRef()));\n\n    useEffect(() => {\n        const handleMouseOver = (index) => {\n            // Mettre opacité à 0.7 pour tous les carrousels sauf celui survolé\n            carouselRefs.current.forEach((ref, i) => {\n                if (ref.current && i !== index) {\n                    ref.current.style.opacity = '0.7';\n                }\n            });\n        };\n\n        const handleMouseOut = () => {\n            // Rétablir l'opacité à 1 pour tous les carrousels\n            carouselRefs.current.forEach(ref => {\n                if (ref.current) {\n                    ref.current.style.opacity = '1';\n                }\n            });\n        };\n\n        // Ajouter les événements de survol et de sortie pour chaque carrousel\n        carouselRefs.current.forEach((ref, index) => {\n            if (ref.current) {\n                ref.current.addEventListener('mouseover', () => handleMouseOver(index));\n                ref.current.addEventListener('mouseout', handleMouseOut);\n            }\n        });\n\n        // Nettoyage des événements lors du démontage du composant\n        return () => {\n            carouselRefs.current.forEach((ref, index) => {\n                if (ref.current) {\n                    ref.current.removeEventListener('mouseover', () => handleMouseOver(index));\n                    ref.current.removeEventListener('mouseout', handleMouseOut);\n                }\n            });\n        };\n    }, [sections]);\n\n    return (\n        <div className=\"menu_page\" ref={menuRef}>\n            <Split1 />\n            {sections.map((section, index) => (\n                <React.Fragment key={section.titre}>\n                    <div \n                        className=\"carrousel\" \n                        ref={carouselRefs.current[index]} // Référence assignée\n                        id={section.titre}\n                    >\n                        {Array(12).fill(null).map((_, i) => (\n                            <Menu_page_item key={i} titre={section.titre} />\n                        ))}\n                    </div>\n                    {index < sections.length - 1 && <span className=\"split2\" />}\n                </React.Fragment>\n            ))}\n            <Split1 />\n        </div>\n    );\n};\n\nexport default Menu_page;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { useEffect, useRef, useState } from \"react\";\n// import data from '../data/data.json';\n\n// const Split1 = () => {\n//     return (\n//         <div className=\"split1\">\n//             <span></span>\n//             <p>Cliquez pour découvrir</p>\n//             <span></span>\n//         </div>\n//     );\n// };\n\n// const Menu_page_item = ({ titre }) => {\n//     return (\n//         <div className='menu_page_item'>\n//             <span></span>\n//             <p>{titre}</p>\n//         </div>\n//     );\n// };\n\n// const Menu_page = () => {\n//     const menuRef = useRef(null);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [startY, setStartY] = useState(0);\n    \n//     // Récupérer les sections depuis le JSON\n//     const sections = data.fr.sections;\n    \n//     // Création des refs en utilisant un objet\n//     const carouselRefs = useRef(\n//         Object.fromEntries(sections.map(section => [section.titre, { current: null }]))\n//     );\n//     const velocityRefs = useRef(\n//         Object.fromEntries(sections.map(section => [section.titre, 0]))\n//     );\n\n//     useEffect(() => {\n//         const observer = new IntersectionObserver(\n//             (entries) => {\n//                 entries.forEach(entry => {\n//                     if (entry.isIntersecting) {\n//                         setIsVisible(true);\n//                         setStartY(window.scrollY);\n//                     } else {\n//                         setIsVisible(false);\n//                     }\n//                 });\n//             },\n//             { threshold: 0.1 }\n//         );\n\n//         if (menuRef.current) {\n//             observer.observe(menuRef.current);\n//         }\n\n//         return () => {\n//             if (menuRef.current) {\n//                 observer.unobserve(menuRef.current);\n//             }\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         if (!isVisible) return;\n\n//         let animationFrameId;\n//         let lastScrollY = window.scrollY;\n\n//         const smoothScroll = () => {\n//             const relativeScrollY = window.scrollY - startY;\n//             const maxScroll = 1000;\n//             const boundedScrollY = Math.max(0, Math.min(relativeScrollY, maxScroll));\n\n//             sections.forEach((section, index) => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (!carousel) return;\n\n//                 const offset = -500 + (index * 100);\n//                 velocityRefs.current[section.titre] += \n//                     ((offset + boundedScrollY * 0.2) - parseFloat(carousel.style.transform?.replace('translateX(', '').replace('px)', '') || 0)) * 0.1;\n                \n//                 velocityRefs.current[section.titre] *= 0.95;\n//                 carousel.style.transform = `translateX(${velocityRefs.current[section.titre]}px)`;\n//             });\n\n//             const hasMovement = Object.values(velocityRefs.current).some(\n//                 velocity => Math.abs(velocity) > 0.1\n//             );\n\n//             if (hasMovement) {\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n\n//             lastScrollY = window.scrollY;\n//         };\n\n//         const startSmoothScroll = () => {\n//             if (isVisible) {\n//                 cancelAnimationFrame(animationFrameId);\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         window.addEventListener('scroll', startSmoothScroll);\n\n//         const updateOpacity = (targetId) => {\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel && carousel.id !== targetId) {\n//                     carousel.style.opacity = '0.7';\n//                 }\n//             });\n//         };\n\n//         const resetOpacity = () => {\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel) {\n//                     carousel.style.opacity = '1';\n//                 }\n//             });\n//         };\n\n//         sections.forEach(section => {\n//             const carousel = carouselRefs.current[section.titre].current;\n//             if (carousel) {\n//                 carousel.addEventListener('mouseover', () => updateOpacity(section.titre));\n//                 //carousel.addEventListener('mouseout', resetOpacity);\n//             }\n//         });\n\n//         return () => {\n//             window.removeEventListener('scroll', startSmoothScroll);\n//             cancelAnimationFrame(animationFrameId);\n//             sections.forEach(section => {\n//                 const carousel = carouselRefs.current[section.titre].current;\n//                 if (carousel) {\n//                     carousel.removeEventListener('mouseover', () => updateOpacity(section.titre));\n//                     carousel.removeEventListener('mouseout', resetOpacity);\n//                 }\n//             });\n//         };\n//     }, [isVisible, startY, sections]);\n\n//     return (\n//         <div className=\"menu_page\" ref={menuRef}>\n//             <Split1 />\n//             {sections.map((section, index) => (\n//                 <React.Fragment key={section.titre}>\n//                     <div \n//                         className=\"carrousel\" \n//                         ref={el => carouselRefs.current[section.titre].current = el}\n//                         id={section.titre}\n//                     >\n//                         {Array(12).fill(null).map((_, i) => (\n//                             <Menu_page_item key={i} titre={section.titre} />\n//                         ))}\n//                     </div>\n//                     {index < sections.length - 1 && <span className=\"split2\" />}\n//                 </React.Fragment>\n//             ))}\n//             <Split1 />\n//         </div>\n//     );\n// };\n\n// export default Menu_page;\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}