{"ast":null,"code":"var _jsxFileName = \"/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Menu_page.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from \"react\";\n// import data from \"../data/data.json\";\n\n// const Split1 = () => (\n//     <div className=\"split1\">\n//         <span></span>\n//         <p>Cliquez pour découvrir</p>\n//         <span></span>\n//     </div>\n// );\n\n// const Menu_page_item = ({ titre }) => (\n//     <div className=\"menu_page_item\">\n//         <span></span>\n//         <p>{titre}</p>\n//     </div>\n// );\n\n// const Menu_page = () => {\n//     const menuRef = useRef(null);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [startY, setStartY] = useState(0);\n\n//     const sections = data.fr.sections;\n\n//     const carouselRefs = useRef({});\n//     const velocityRefs = useRef({});\n\n//     useEffect(() => {\n//         console.log(\"Références des carrousels :\", carouselRefs.current);\n//     }, []);\n\n//     useEffect(() => {\n//         const observer = new IntersectionObserver(\n//             (entries) => {\n//                 entries.forEach((entry) => {\n//                     if (entry.isIntersecting) {\n//                         setIsVisible(true);\n//                         setStartY(window.scrollY);\n//                     } else {\n//                         setIsVisible(false);\n//                     }\n//                 });\n//             },\n//             { threshold: 0.1 }\n//         );\n\n//         if (menuRef.current) {\n//             observer.observe(menuRef.current);\n//         }\n\n//         return () => {\n//             if (menuRef.current) {\n//                 observer.unobserve(menuRef.current);\n//             }\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         if (!isVisible) return;\n\n//         let animationFrameId;\n\n//         const smoothScroll = () => {\n//             const relativeScrollY = window.scrollY - startY;\n//             const maxScroll = 1000;\n//             const boundedScrollY = Math.max(0, Math.min(relativeScrollY, maxScroll));\n//             const scrollFactor = 0.2;\n\n//             sections.forEach((section, index) => {\n//                 const carousel = carouselRefs.current[section.titre]?.current;\n//                 if (!carousel) return;\n\n//                 const isMovingRight = index % 2 === 1;\n//                 const direction = isMovingRight ? 1 : -1;\n//                 const baseOffset = isMovingRight ? 600 : -600;\n//                 const targetPosition = baseOffset + boundedScrollY * scrollFactor * direction;\n//                 const currentPosition = parseFloat(carousel.style.transform?.replace(\"translateX(\", \"\").replace(\"px)\", \"\") || 0);\n\n//                 velocityRefs.current[section.titre] = velocityRefs.current[section.titre] || 0;\n//                 velocityRefs.current[section.titre] += (targetPosition - currentPosition) * 0.08;\n//                 velocityRefs.current[section.titre] *= 0.92;\n\n//                 carousel.style.transform = `translateX(${velocityRefs.current[section.titre]}px)`;\n//             });\n\n//             const hasMovement = Object.values(velocityRefs.current).some(\n//                 (velocity) => Math.abs(velocity) > 0.05\n//             );\n\n//             if (hasMovement) {\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         const startSmoothScroll = () => {\n//             if (isVisible) {\n//                 cancelAnimationFrame(animationFrameId);\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         window.addEventListener(\"scroll\", startSmoothScroll);\n\n//         return () => {\n//             window.removeEventListener(\"scroll\", startSmoothScroll);\n//             cancelAnimationFrame(animationFrameId);\n//         };\n//     }, [isVisible, startY, sections]);\n\n//     return (\n//         <div className=\"menu_page\" ref={menuRef}>\n//             <Split1 />\n//             {sections.map((section, index) => (\n//                 <React.Fragment key={section.titre}>\n//                     <div\n//                         className=\"carrousel\"\n//                         ref={(el) => {\n//                             if (el) {\n//                                 carouselRefs.current[section.titre] = { current: el };\n//                             }\n//                         }}\n//                         id={section.titre}\n//                     >\n//                         {Array(12)\n//                             .fill(null)\n//                             .map((_, i) => (\n//                                 <Menu_page_item key={i} titre={section.titre} />\n//                             ))}\n//                     </div>\n//                     {index < sections.length - 1 && <span className=\"split2\" />}\n//                 </React.Fragment>\n//             ))}\n//             <Split1 />\n//         </div>\n//     );\n// };\n\n// export default Menu_page;\n\nimport React, { useRef } from \"react\";\nimport data from \"../data/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Split1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"split1\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cliquez pour d\\xE9couvrir\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 5\n}, this);\n_c = Split1;\nconst Menu_page_item = ({\n  titre\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"menu_page_item\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: titre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 5\n}, this);\n_c2 = Menu_page_item;\nconst Menu_page = () => {\n  _s();\n  const menuRef = useRef(null);\n  const sections = data.fr.sections;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_page\",\n    ref: menuRef,\n    children: [/*#__PURE__*/_jsxDEV(Split1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), sections.map((section, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carrousel\",\n        id: section.titre,\n        children: Array(12).fill(null).map((_, i) => /*#__PURE__*/_jsxDEV(Menu_page_item, {\n          titre: section.titre\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), index < sections.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"split2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 53\n      }, this)]\n    }, section.titre, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Split1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(Menu_page, \"wwfm6srM2YvI+yRyIz7GebNqWJI=\");\n_c3 = Menu_page;\nexport default Menu_page;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Split1\");\n$RefreshReg$(_c2, \"Menu_page_item\");\n$RefreshReg$(_c3, \"Menu_page\");","map":{"version":3,"names":["React","useRef","data","jsxDEV","_jsxDEV","Split1","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Menu_page_item","titre","_c2","Menu_page","_s","menuRef","sections","fr","ref","map","section","index","Fragment","id","Array","fill","_","i","length","_c3","$RefreshReg$"],"sources":["/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Menu_page.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from \"react\";\n// import data from \"../data/data.json\";\n\n// const Split1 = () => (\n//     <div className=\"split1\">\n//         <span></span>\n//         <p>Cliquez pour découvrir</p>\n//         <span></span>\n//     </div>\n// );\n\n// const Menu_page_item = ({ titre }) => (\n//     <div className=\"menu_page_item\">\n//         <span></span>\n//         <p>{titre}</p>\n//     </div>\n// );\n\n// const Menu_page = () => {\n//     const menuRef = useRef(null);\n//     const [isVisible, setIsVisible] = useState(false);\n//     const [startY, setStartY] = useState(0);\n\n//     const sections = data.fr.sections;\n    \n//     const carouselRefs = useRef({});\n//     const velocityRefs = useRef({});\n\n//     useEffect(() => {\n//         console.log(\"Références des carrousels :\", carouselRefs.current);\n//     }, []);\n\n//     useEffect(() => {\n//         const observer = new IntersectionObserver(\n//             (entries) => {\n//                 entries.forEach((entry) => {\n//                     if (entry.isIntersecting) {\n//                         setIsVisible(true);\n//                         setStartY(window.scrollY);\n//                     } else {\n//                         setIsVisible(false);\n//                     }\n//                 });\n//             },\n//             { threshold: 0.1 }\n//         );\n\n//         if (menuRef.current) {\n//             observer.observe(menuRef.current);\n//         }\n\n//         return () => {\n//             if (menuRef.current) {\n//                 observer.unobserve(menuRef.current);\n//             }\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         if (!isVisible) return;\n\n//         let animationFrameId;\n\n//         const smoothScroll = () => {\n//             const relativeScrollY = window.scrollY - startY;\n//             const maxScroll = 1000;\n//             const boundedScrollY = Math.max(0, Math.min(relativeScrollY, maxScroll));\n//             const scrollFactor = 0.2;\n\n//             sections.forEach((section, index) => {\n//                 const carousel = carouselRefs.current[section.titre]?.current;\n//                 if (!carousel) return;\n\n//                 const isMovingRight = index % 2 === 1;\n//                 const direction = isMovingRight ? 1 : -1;\n//                 const baseOffset = isMovingRight ? 600 : -600;\n//                 const targetPosition = baseOffset + boundedScrollY * scrollFactor * direction;\n//                 const currentPosition = parseFloat(carousel.style.transform?.replace(\"translateX(\", \"\").replace(\"px)\", \"\") || 0);\n\n//                 velocityRefs.current[section.titre] = velocityRefs.current[section.titre] || 0;\n//                 velocityRefs.current[section.titre] += (targetPosition - currentPosition) * 0.08;\n//                 velocityRefs.current[section.titre] *= 0.92;\n\n//                 carousel.style.transform = `translateX(${velocityRefs.current[section.titre]}px)`;\n//             });\n\n//             const hasMovement = Object.values(velocityRefs.current).some(\n//                 (velocity) => Math.abs(velocity) > 0.05\n//             );\n\n//             if (hasMovement) {\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         const startSmoothScroll = () => {\n//             if (isVisible) {\n//                 cancelAnimationFrame(animationFrameId);\n//                 animationFrameId = requestAnimationFrame(smoothScroll);\n//             }\n//         };\n\n//         window.addEventListener(\"scroll\", startSmoothScroll);\n\n//         return () => {\n//             window.removeEventListener(\"scroll\", startSmoothScroll);\n//             cancelAnimationFrame(animationFrameId);\n//         };\n//     }, [isVisible, startY, sections]);\n\n//     return (\n//         <div className=\"menu_page\" ref={menuRef}>\n//             <Split1 />\n//             {sections.map((section, index) => (\n//                 <React.Fragment key={section.titre}>\n//                     <div\n//                         className=\"carrousel\"\n//                         ref={(el) => {\n//                             if (el) {\n//                                 carouselRefs.current[section.titre] = { current: el };\n//                             }\n//                         }}\n//                         id={section.titre}\n//                     >\n//                         {Array(12)\n//                             .fill(null)\n//                             .map((_, i) => (\n//                                 <Menu_page_item key={i} titre={section.titre} />\n//                             ))}\n//                     </div>\n//                     {index < sections.length - 1 && <span className=\"split2\" />}\n//                 </React.Fragment>\n//             ))}\n//             <Split1 />\n//         </div>\n//     );\n// };\n\n// export default Menu_page;\n\nimport React, { useRef } from \"react\";\nimport data from \"../data/data.json\";\n\nconst Split1 = () => (\n    <div className=\"split1\">\n        <span></span>\n        <p>Cliquez pour découvrir</p>\n        <span></span>\n    </div>\n);\n\nconst Menu_page_item = ({ titre }) => (\n    <div className=\"menu_page_item\">\n        <span></span>\n        <p>{titre}</p>\n    </div>\n);\n\nconst Menu_page = () => {\n    const menuRef = useRef(null);\n    const sections = data.fr.sections;\n\n    return (\n        <div className=\"menu_page\" ref={menuRef}>\n            <Split1 />\n            {sections.map((section, index) => (\n                <React.Fragment key={section.titre}>\n                    <div className=\"carrousel\" id={section.titre}>\n                        {Array(12)\n                            .fill(null)\n                            .map((_, i) => (\n                                <Menu_page_item key={i} titre={section.titre} />\n                            ))}\n                    </div>\n                    {index < sections.length - 1 && <span className=\"split2\" />}\n                </React.Fragment>\n            ))}\n            <Split1 />\n        </div>\n    );\n};\n\nexport default Menu_page;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}