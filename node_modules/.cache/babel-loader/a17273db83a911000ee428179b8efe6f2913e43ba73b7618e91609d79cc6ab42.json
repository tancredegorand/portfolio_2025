{"ast":null,"code":"var _jsxFileName = \"/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Projects.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Project from \"./Project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = ({\n  section\n}) => {\n  _s();\n  const [visibleIndex, setVisibleIndex] = useState(null);\n  const projectRefs = useRef([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setVisibleIndex(Number(entry.target.dataset.index));\n        }\n      });\n    }, {\n      threshold: 0.5\n    } // Déclenche lorsque 50% de l'élément est visible\n    );\n    projectRefs.current.forEach(ref => {\n      if (ref) observer.observe(ref);\n    });\n    return () => {\n      projectRefs.current.forEach(ref => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects\",\n    id: \"projects\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: section.projets.map((projet, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            opacity: visibleIndex === index ? 1 : 0.7,\n            // Augmente l'opacité du résumé visible\n            transition: \"opacity 0.5s ease-in-out\"\n          },\n          children: projet.titre_projet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: section.projets.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => projectRefs.current[index] = el,\n        \"data-index\": index,\n        children: /*#__PURE__*/_jsxDEV(Project, {\n          project: project,\n          titreSection: section.titre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"jvF/whqhGaYLTTuX7R50XQN7fz0=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useState","useEffect","useRef","Project","jsxDEV","_jsxDEV","Projects","section","_s","visibleIndex","setVisibleIndex","projectRefs","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","Number","target","dataset","index","threshold","current","ref","observe","unobserve","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","projets","map","projet","style","opacity","transition","titre_projet","project","el","titreSection","titre","_c","$RefreshReg$"],"sources":["/Users/tancredegorand/Documents/TANCREDE/1-LOCAL/Portfolio/portfolio_2025/src/component/Projects.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Project from \"./Project\";\n\nconst Projects = ({ section }) => {\n  const [visibleIndex, setVisibleIndex] = useState(null);\n  const projectRefs = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setVisibleIndex(Number(entry.target.dataset.index));\n          }\n        });\n      },\n      { threshold: 0.5 } // Déclenche lorsque 50% de l'élément est visible\n    );\n\n    projectRefs.current.forEach((ref) => {\n      if (ref) observer.observe(ref);\n    });\n\n    return () => {\n      projectRefs.current.forEach((ref) => {\n        if (ref) observer.unobserve(ref);\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"projects\" id=\"projects\">\n      <div className=\"projects-summary\">\n        <span></span>\n        <div>\n          {section.projets.map((projet, index) => (\n            <p\n              key={index}\n              style={{\n                opacity: visibleIndex === index ? 1 : 0.7, // Augmente l'opacité du résumé visible\n                transition: \"opacity 0.5s ease-in-out\",\n              }}\n            >\n              {projet.titre_projet}\n            </p>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"projects-list\">\n        {section.projets.map((project, index) => (\n          <div\n            key={index}\n            ref={(el) => (projectRefs.current[index] = el)}\n            data-index={index}\n          >\n            <Project project={project} titreSection={section.titre} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}